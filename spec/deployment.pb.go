// Code generated by make; DO NOT EDIT.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.24.3
// source: spec/deployment.proto

package deployment

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// S3SignatureVersion is the version of the signing algorithm for all s3 requests
type S3SignatureVersion int32

const (
	S3SignatureVersion_UnknownSignature S3SignatureVersion = 0
	// S3V2, Signature version v2
	S3SignatureVersion_S3V2 S3SignatureVersion = 1
	// S3V4, Signature version v4
	S3SignatureVersion_S3V4 S3SignatureVersion = 2
)

// Enum value maps for S3SignatureVersion.
var (
	S3SignatureVersion_name = map[int32]string{
		0: "UnknownSignature",
		1: "S3V2",
		2: "S3V4",
	}
	S3SignatureVersion_value = map[string]int32{
		"UnknownSignature": 0,
		"S3V2":             1,
		"S3V4":             2,
	}
)

func (x S3SignatureVersion) Enum() *S3SignatureVersion {
	p := new(S3SignatureVersion)
	*p = x
	return p
}

func (x S3SignatureVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (S3SignatureVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_spec_deployment_proto_enumTypes[0].Descriptor()
}

func (S3SignatureVersion) Type() protoreflect.EnumType {
	return &file_spec_deployment_proto_enumTypes[0]
}

func (x S3SignatureVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use S3SignatureVersion.Descriptor instead.
func (S3SignatureVersion) EnumDescriptor() ([]byte, []int) {
	return file_spec_deployment_proto_rawDescGZIP(), []int{0}
}

type AnonymousDeploymentAccessMode int32

const (
	AnonymousDeploymentAccessMode_UnknownDeploymentAccessMode AnonymousDeploymentAccessMode = 0
	// Default, disallow uncredentialed access to the backend storage.
	AnonymousDeploymentAccessMode_Private AnonymousDeploymentAccessMode = 1
	// Read only, uncredentialed users can call ListDeployment and GetObject.
	AnonymousDeploymentAccessMode_ReadOnly AnonymousDeploymentAccessMode = 2
	// Write only, uncredentialed users can only call PutObject.
	AnonymousDeploymentAccessMode_WriteOnly AnonymousDeploymentAccessMode = 3
	// Read/Write, uncredentialed users can read objects as well as PutObject.
	AnonymousDeploymentAccessMode_ReadWrite AnonymousDeploymentAccessMode = 4
)

// Enum value maps for AnonymousDeploymentAccessMode.
var (
	AnonymousDeploymentAccessMode_name = map[int32]string{
		0: "UnknownDeploymentAccessMode",
		1: "Private",
		2: "ReadOnly",
		3: "WriteOnly",
		4: "ReadWrite",
	}
	AnonymousDeploymentAccessMode_value = map[string]int32{
		"UnknownDeploymentAccessMode": 0,
		"Private":                     1,
		"ReadOnly":                    2,
		"WriteOnly":                   3,
		"ReadWrite":                   4,
	}
)

func (x AnonymousDeploymentAccessMode) Enum() *AnonymousDeploymentAccessMode {
	p := new(AnonymousDeploymentAccessMode)
	*p = x
	return p
}

func (x AnonymousDeploymentAccessMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AnonymousDeploymentAccessMode) Descriptor() protoreflect.EnumDescriptor {
	return file_spec_deployment_proto_enumTypes[1].Descriptor()
}

func (AnonymousDeploymentAccessMode) Type() protoreflect.EnumType {
	return &file_spec_deployment_proto_enumTypes[1]
}

func (x AnonymousDeploymentAccessMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AnonymousDeploymentAccessMode.Descriptor instead.
func (AnonymousDeploymentAccessMode) EnumDescriptor() ([]byte, []int) {
	return file_spec_deployment_proto_rawDescGZIP(), []int{1}
}

type AuthenticationType int32

const (
	AuthenticationType_UnknownAuthenticationType AuthenticationType = 0
	// Default, KEY based authentication.
	AuthenticationType_Key AuthenticationType = 1
	// Storageaccount based authentication.
	AuthenticationType_IAM AuthenticationType = 2
)

// Enum value maps for AuthenticationType.
var (
	AuthenticationType_name = map[int32]string{
		0: "UnknownAuthenticationType",
		1: "Key",
		2: "IAM",
	}
	AuthenticationType_value = map[string]int32{
		"UnknownAuthenticationType": 0,
		"Key":                       1,
		"IAM":                       2,
	}
)

func (x AuthenticationType) Enum() *AuthenticationType {
	p := new(AuthenticationType)
	*p = x
	return p
}

func (x AuthenticationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthenticationType) Descriptor() protoreflect.EnumDescriptor {
	return file_spec_deployment_proto_enumTypes[2].Descriptor()
}

func (AuthenticationType) Type() protoreflect.EnumType {
	return &file_spec_deployment_proto_enumTypes[2]
}

func (x AuthenticationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthenticationType.Descriptor instead.
func (AuthenticationType) EnumDescriptor() ([]byte, []int) {
	return file_spec_deployment_proto_rawDescGZIP(), []int{2}
}

type S3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// region denotes the geographical region where the S3 server is running
	Region string `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	// signature_version denotes the signature version for signing all s3 requests
	SignatureVersion S3SignatureVersion `protobuf:"varint,2,opt,name=signature_version,json=signatureVersion,proto3,enum=deployment.v1alpha1.S3SignatureVersion" json:"signature_version,omitempty"`
}

func (x *S3) Reset() {
	*x = S3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_deployment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *S3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S3) ProtoMessage() {}

func (x *S3) ProtoReflect() protoreflect.Message {
	mi := &file_spec_deployment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S3.ProtoReflect.Descriptor instead.
func (*S3) Descriptor() ([]byte, []int) {
	return file_spec_deployment_proto_rawDescGZIP(), []int{0}
}

func (x *S3) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *S3) GetSignatureVersion() S3SignatureVersion {
	if x != nil {
		return x.SignatureVersion
	}
	return S3SignatureVersion_UnknownSignature
}

type AzureBlob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// storage_account is the id of the azure storage account
	StorageAccount string `protobuf:"bytes,1,opt,name=storage_account,json=storageAccount,proto3" json:"storage_account,omitempty"`
}

func (x *AzureBlob) Reset() {
	*x = AzureBlob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_deployment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AzureBlob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AzureBlob) ProtoMessage() {}

func (x *AzureBlob) ProtoReflect() protoreflect.Message {
	mi := &file_spec_deployment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AzureBlob.ProtoReflect.Descriptor instead.
func (*AzureBlob) Descriptor() ([]byte, []int) {
	return file_spec_deployment_proto_rawDescGZIP(), []int{1}
}

func (x *AzureBlob) GetStorageAccount() string {
	if x != nil {
		return x.StorageAccount
	}
	return ""
}

type GCS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// private_key_name denotes the name of the private key in the storage backend
	PrivateKeyName string `protobuf:"bytes,1,opt,name=private_key_name,json=privateKeyName,proto3" json:"private_key_name,omitempty"`
	// project_id denotes the name of the project id in the storage backend
	ProjectId string `protobuf:"bytes,2,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// service_account denotes the name of the service account in the storage backend
	ServiceAccount string `protobuf:"bytes,3,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
}

func (x *GCS) Reset() {
	*x = GCS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_deployment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GCS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GCS) ProtoMessage() {}

func (x *GCS) ProtoReflect() protoreflect.Message {
	mi := &file_spec_deployment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GCS.ProtoReflect.Descriptor instead.
func (*GCS) Descriptor() ([]byte, []int) {
	return file_spec_deployment_proto_rawDescGZIP(), []int{2}
}

func (x *GCS) GetPrivateKeyName() string {
	if x != nil {
		return x.PrivateKeyName
	}
	return ""
}

func (x *GCS) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GCS) GetServiceAccount() string {
	if x != nil {
		return x.ServiceAccount
	}
	return ""
}

type Protocol struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Type:
	//
	//	*Protocol_S3
	//	*Protocol_AzureBlob
	//	*Protocol_Gcs
	Type isProtocol_Type `protobuf_oneof:"type"`
}

func (x *Protocol) Reset() {
	*x = Protocol{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_deployment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Protocol) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Protocol) ProtoMessage() {}

func (x *Protocol) ProtoReflect() protoreflect.Message {
	mi := &file_spec_deployment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Protocol.ProtoReflect.Descriptor instead.
func (*Protocol) Descriptor() ([]byte, []int) {
	return file_spec_deployment_proto_rawDescGZIP(), []int{3}
}

func (m *Protocol) GetType() isProtocol_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Protocol) GetS3() *S3 {
	if x, ok := x.GetType().(*Protocol_S3); ok {
		return x.S3
	}
	return nil
}

func (x *Protocol) GetAzureBlob() *AzureBlob {
	if x, ok := x.GetType().(*Protocol_AzureBlob); ok {
		return x.AzureBlob
	}
	return nil
}

func (x *Protocol) GetGcs() *GCS {
	if x, ok := x.GetType().(*Protocol_Gcs); ok {
		return x.Gcs
	}
	return nil
}

type isProtocol_Type interface {
	isProtocol_Type()
}

type Protocol_S3 struct {
	S3 *S3 `protobuf:"bytes,1,opt,name=s3,proto3,oneof"`
}

type Protocol_AzureBlob struct {
	AzureBlob *AzureBlob `protobuf:"bytes,2,opt,name=azureBlob,proto3,oneof"`
}

type Protocol_Gcs struct {
	Gcs *GCS `protobuf:"bytes,3,opt,name=gcs,proto3,oneof"`
}

func (*Protocol_S3) isProtocol_Type() {}

func (*Protocol_AzureBlob) isProtocol_Type() {}

func (*Protocol_Gcs) isProtocol_Type() {}

type CredentialDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// map of the details in the secrets for the protocol string
	Secrets map[string]string `protobuf:"bytes,1,rep,name=secrets,proto3" json:"secrets,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *CredentialDetails) Reset() {
	*x = CredentialDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_deployment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CredentialDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialDetails) ProtoMessage() {}

func (x *CredentialDetails) ProtoReflect() protoreflect.Message {
	mi := &file_spec_deployment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialDetails.ProtoReflect.Descriptor instead.
func (*CredentialDetails) Descriptor() ([]byte, []int) {
	return file_spec_deployment_proto_rawDescGZIP(), []int{4}
}

func (x *CredentialDetails) GetSecrets() map[string]string {
	if x != nil {
		return x.Secrets
	}
	return nil
}

type DriverGetInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DriverGetInfoRequest) Reset() {
	*x = DriverGetInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_deployment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverGetInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverGetInfoRequest) ProtoMessage() {}

func (x *DriverGetInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_deployment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverGetInfoRequest.ProtoReflect.Descriptor instead.
func (*DriverGetInfoRequest) Descriptor() ([]byte, []int) {
	return file_spec_deployment_proto_rawDescGZIP(), []int{5}
}

type DriverGetInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This field is REQUIRED
	// The name MUST follow domain name notation format
	// (https://tools.ietf.org/html/rfc1035#section-2.3.1). It SHOULD
	// include the plugin's host company name and the plugin name,
	// to minimize the possibility of collisions. It MUST be 63
	// characters or less, beginning and ending with an alphanumeric
	// character ([a-z0-9A-Z]) with dashes (-), dots (.), and
	// alphanumerics between.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DriverGetInfoResponse) Reset() {
	*x = DriverGetInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_deployment_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverGetInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverGetInfoResponse) ProtoMessage() {}

func (x *DriverGetInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spec_deployment_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverGetInfoResponse.ProtoReflect.Descriptor instead.
func (*DriverGetInfoResponse) Descriptor() ([]byte, []int) {
	return file_spec_deployment_proto_rawDescGZIP(), []int{6}
}

func (x *DriverGetInfoResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type DriverCreateDeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This field is REQUIRED
	// name specifies the name of the deployment that should be created.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// This field is OPTIONAL
	// The caller should treat the values in parameters as opaque.
	// The receiver is responsible for parsing and validating the values.
	Parameters map[string]string `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DriverCreateDeploymentRequest) Reset() {
	*x = DriverCreateDeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_deployment_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverCreateDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverCreateDeploymentRequest) ProtoMessage() {}

func (x *DriverCreateDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_deployment_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverCreateDeploymentRequest.ProtoReflect.Descriptor instead.
func (*DriverCreateDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_spec_deployment_proto_rawDescGZIP(), []int{7}
}

func (x *DriverCreateDeploymentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DriverCreateDeploymentRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type DriverCreateDeploymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// deployment_id returned here is expected to be the globally unique
	// identifier for the deployment in the object storage provider.
	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	// deployment_info returned here stores the data specific to the
	// deployment required by the object storage provider to connect to the deployment.
	DeploymentInfo *Protocol `protobuf:"bytes,2,opt,name=deployment_info,json=deploymentInfo,proto3" json:"deployment_info,omitempty"`
}

func (x *DriverCreateDeploymentResponse) Reset() {
	*x = DriverCreateDeploymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_deployment_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverCreateDeploymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverCreateDeploymentResponse) ProtoMessage() {}

func (x *DriverCreateDeploymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spec_deployment_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverCreateDeploymentResponse.ProtoReflect.Descriptor instead.
func (*DriverCreateDeploymentResponse) Descriptor() ([]byte, []int) {
	return file_spec_deployment_proto_rawDescGZIP(), []int{8}
}

func (x *DriverCreateDeploymentResponse) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *DriverCreateDeploymentResponse) GetDeploymentInfo() *Protocol {
	if x != nil {
		return x.DeploymentInfo
	}
	return nil
}

type DriverDeleteDeploymentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This field is REQUIRED
	// deployment_id is a globally unique identifier for the deployment
	// in the object storage provider
	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
}

func (x *DriverDeleteDeploymentRequest) Reset() {
	*x = DriverDeleteDeploymentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_deployment_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverDeleteDeploymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverDeleteDeploymentRequest) ProtoMessage() {}

func (x *DriverDeleteDeploymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_deployment_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverDeleteDeploymentRequest.ProtoReflect.Descriptor instead.
func (*DriverDeleteDeploymentRequest) Descriptor() ([]byte, []int) {
	return file_spec_deployment_proto_rawDescGZIP(), []int{9}
}

func (x *DriverDeleteDeploymentRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

type DriverDeleteDeploymentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DriverDeleteDeploymentResponse) Reset() {
	*x = DriverDeleteDeploymentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_deployment_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverDeleteDeploymentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverDeleteDeploymentResponse) ProtoMessage() {}

func (x *DriverDeleteDeploymentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spec_deployment_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverDeleteDeploymentResponse.ProtoReflect.Descriptor instead.
func (*DriverDeleteDeploymentResponse) Descriptor() ([]byte, []int) {
	return file_spec_deployment_proto_rawDescGZIP(), []int{10}
}

type DriverGrantDeploymentAccessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This field is REQUIRED
	// deployment_id is a globally unique identifier for the deployment
	// in the object storage provider
	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	// This field is REQUIRED
	// name field is used to define the name of the deployment access object.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// This field is REQUIRED
	// Requested authentication type for the deployment access.
	// Supported authentication types are KEY or IAM.
	AuthenticationType AuthenticationType `protobuf:"varint,3,opt,name=authentication_type,json=authenticationType,proto3,enum=deployment.v1alpha1.AuthenticationType" json:"authentication_type,omitempty"`
	// This field is OPTIONAL
	// The caller should treat the values in parameters as opaque.
	// The receiver is responsible for parsing and validating the values.
	Parameters map[string]string `protobuf:"bytes,4,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DriverGrantDeploymentAccessRequest) Reset() {
	*x = DriverGrantDeploymentAccessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_deployment_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverGrantDeploymentAccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverGrantDeploymentAccessRequest) ProtoMessage() {}

func (x *DriverGrantDeploymentAccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_deployment_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverGrantDeploymentAccessRequest.ProtoReflect.Descriptor instead.
func (*DriverGrantDeploymentAccessRequest) Descriptor() ([]byte, []int) {
	return file_spec_deployment_proto_rawDescGZIP(), []int{11}
}

func (x *DriverGrantDeploymentAccessRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *DriverGrantDeploymentAccessRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DriverGrantDeploymentAccessRequest) GetAuthenticationType() AuthenticationType {
	if x != nil {
		return x.AuthenticationType
	}
	return AuthenticationType_UnknownAuthenticationType
}

func (x *DriverGrantDeploymentAccessRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type DriverGrantDeploymentAccessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This field is REQUIRED
	// This is the account_id that is being provided access. This will
	// be required later to revoke access.
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	// This field is REQUIRED
	// Credentials supplied for accessing the deployment ex: aws access key id and secret, etc.
	Credentials map[string]*CredentialDetails `protobuf:"bytes,2,rep,name=credentials,proto3" json:"credentials,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *DriverGrantDeploymentAccessResponse) Reset() {
	*x = DriverGrantDeploymentAccessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_deployment_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverGrantDeploymentAccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverGrantDeploymentAccessResponse) ProtoMessage() {}

func (x *DriverGrantDeploymentAccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spec_deployment_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverGrantDeploymentAccessResponse.ProtoReflect.Descriptor instead.
func (*DriverGrantDeploymentAccessResponse) Descriptor() ([]byte, []int) {
	return file_spec_deployment_proto_rawDescGZIP(), []int{12}
}

func (x *DriverGrantDeploymentAccessResponse) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *DriverGrantDeploymentAccessResponse) GetCredentials() map[string]*CredentialDetails {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type DriverRevokeDeploymentAccessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This field is REQUIRED
	// deployment_id is a globally unique identifier for the deployment
	// in the object storage provider.
	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	// This field is REQUIRED
	// This is the account_id that is having its access revoked.
	AccountId string `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
}

func (x *DriverRevokeDeploymentAccessRequest) Reset() {
	*x = DriverRevokeDeploymentAccessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_deployment_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverRevokeDeploymentAccessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverRevokeDeploymentAccessRequest) ProtoMessage() {}

func (x *DriverRevokeDeploymentAccessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spec_deployment_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverRevokeDeploymentAccessRequest.ProtoReflect.Descriptor instead.
func (*DriverRevokeDeploymentAccessRequest) Descriptor() ([]byte, []int) {
	return file_spec_deployment_proto_rawDescGZIP(), []int{13}
}

func (x *DriverRevokeDeploymentAccessRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *DriverRevokeDeploymentAccessRequest) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

type DriverRevokeDeploymentAccessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DriverRevokeDeploymentAccessResponse) Reset() {
	*x = DriverRevokeDeploymentAccessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spec_deployment_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverRevokeDeploymentAccessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverRevokeDeploymentAccessResponse) ProtoMessage() {}

func (x *DriverRevokeDeploymentAccessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spec_deployment_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverRevokeDeploymentAccessResponse.ProtoReflect.Descriptor instead.
func (*DriverRevokeDeploymentAccessResponse) Descriptor() ([]byte, []int) {
	return file_spec_deployment_proto_rawDescGZIP(), []int{14}
}

var file_spec_deployment_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.EnumOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         1116,
		Name:          "deployment.v1alpha1.alpha_enum",
		Tag:           "varint,1116,opt,name=alpha_enum",
		Filename:      "spec/deployment.proto",
	},
	{
		ExtendedType:  (*descriptorpb.EnumValueOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         1116,
		Name:          "deployment.v1alpha1.alpha_enum_value",
		Tag:           "varint,1116,opt,name=alpha_enum_value",
		Filename:      "spec/deployment.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         1115,
		Name:          "deployment.v1alpha1.deployment_secret",
		Tag:           "varint,1115,opt,name=deployment_secret",
		Filename:      "spec/deployment.proto",
	},
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         1116,
		Name:          "deployment.v1alpha1.alpha_field",
		Tag:           "varint,1116,opt,name=alpha_field",
		Filename:      "spec/deployment.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MessageOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         1116,
		Name:          "deployment.v1alpha1.alpha_message",
		Tag:           "varint,1116,opt,name=alpha_message",
		Filename:      "spec/deployment.proto",
	},
	{
		ExtendedType:  (*descriptorpb.MethodOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         1116,
		Name:          "deployment.v1alpha1.alpha_method",
		Tag:           "varint,1116,opt,name=alpha_method",
		Filename:      "spec/deployment.proto",
	},
	{
		ExtendedType:  (*descriptorpb.ServiceOptions)(nil),
		ExtensionType: (*bool)(nil),
		Field:         1116,
		Name:          "deployment.v1alpha1.alpha_service",
		Tag:           "varint,1116,opt,name=alpha_service",
		Filename:      "spec/deployment.proto",
	},
}

// Extension fields to descriptorpb.EnumOptions.
var (
	// Indicates that this enum is OPTIONAL and part of an experimental
	// API that may be deprecated and eventually removed between minor
	// releases.
	//
	// optional bool alpha_enum = 1116;
	E_AlphaEnum = &file_spec_deployment_proto_extTypes[0]
)

// Extension fields to descriptorpb.EnumValueOptions.
var (
	// Indicates that this enum value is OPTIONAL and part of an
	// experimental API that may be deprecated and eventually removed
	// between minor releases.
	//
	// optional bool alpha_enum_value = 1116;
	E_AlphaEnumValue = &file_spec_deployment_proto_extTypes[1]
)

// Extension fields to descriptorpb.FieldOptions.
var (
	// Indicates that a field MAY contain information that is sensitive
	// and MUST be treated as such (e.g. not logged).
	//
	// optional bool deployment_secret = 1115;
	E_DeploymentSecret = &file_spec_deployment_proto_extTypes[2]
	// Indicates that this field is OPTIONAL and part of an experimental
	// API that may be deprecated and eventually removed between minor
	// releases.
	//
	// optional bool alpha_field = 1116;
	E_AlphaField = &file_spec_deployment_proto_extTypes[3]
)

// Extension fields to descriptorpb.MessageOptions.
var (
	// Indicates that this message is OPTIONAL and part of an experimental
	// API that may be deprecated and eventually removed between minor
	// releases.
	//
	// optional bool alpha_message = 1116;
	E_AlphaMessage = &file_spec_deployment_proto_extTypes[4]
)

// Extension fields to descriptorpb.MethodOptions.
var (
	// Indicates that this method is OPTIONAL and part of an experimental
	// API that may be deprecated and eventually removed between minor
	// releases.
	//
	// optional bool alpha_method = 1116;
	E_AlphaMethod = &file_spec_deployment_proto_extTypes[5]
)

// Extension fields to descriptorpb.ServiceOptions.
var (
	// Indicates that this service is OPTIONAL and part of an experimental
	// API that may be deprecated and eventually removed between minor
	// releases.
	//
	// optional bool alpha_service = 1116;
	E_AlphaService = &file_spec_deployment_proto_extTypes[6]
)

var File_spec_deployment_proto protoreflect.FileDescriptor

var file_spec_deployment_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x70, 0x65, 0x63, 0x2f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x20, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x72,
	0x0a, 0x02, 0x53, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x11,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53, 0x33,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x10, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0x34, 0x0a, 0x09, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x42, 0x6c, 0x6f, 0x62, 0x12,
	0x27, 0x0a, 0x0f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x77, 0x0a, 0x03, 0x47, 0x43, 0x53, 0x12,
	0x28, 0x0a, 0x10, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0xab, 0x01, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x29,
	0x0a, 0x02, 0x73, 0x33, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x53, 0x33, 0x48, 0x00, 0x52, 0x02, 0x73, 0x33, 0x12, 0x3e, 0x0a, 0x09, 0x61, 0x7a, 0x75,
	0x72, 0x65, 0x42, 0x6c, 0x6f, 0x62, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x41, 0x7a, 0x75, 0x72, 0x65, 0x42, 0x6c, 0x6f, 0x62, 0x48, 0x00, 0x52, 0x09,
	0x61, 0x7a, 0x75, 0x72, 0x65, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x2c, 0x0a, 0x03, 0x67, 0x63, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47, 0x43, 0x53,
	0x48, 0x00, 0x52, 0x03, 0x67, 0x63, 0x73, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22,
	0x9e, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x4d, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x16, 0x0a, 0x14, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x2b, 0x0a, 0x15, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd6, 0x01, 0x0a, 0x1d, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x62, 0x0a, 0x0a, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x42, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a,
	0x3d, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8d,
	0x01, 0x0a, 0x1e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x0e,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x44,
	0x0a, 0x1d, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x20, 0x0a, 0x1e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xdf, 0x02, 0x0a, 0x22, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x58, 0x0a, 0x13, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x12, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x67, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x99, 0x02, 0x0a, 0x23, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x6b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x1a, 0x66, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x3c, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0x69, 0x0a, 0x23, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x26, 0x0a, 0x24, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x3e, 0x0a, 0x12, 0x53, 0x33, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x10, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x33, 0x56, 0x32, 0x10, 0x01, 0x12, 0x08, 0x0a,
	0x04, 0x53, 0x33, 0x56, 0x34, 0x10, 0x02, 0x2a, 0x79, 0x0a, 0x1d, 0x41, 0x6e, 0x6f, 0x6e, 0x79,
	0x6d, 0x6f, 0x75, 0x73, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x61, 0x64, 0x4f, 0x6e,
	0x6c, 0x79, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x57, 0x72, 0x69, 0x74, 0x65, 0x4f, 0x6e, 0x6c,
	0x79, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x64, 0x57, 0x72, 0x69, 0x74, 0x65,
	0x10, 0x04, 0x2a, 0x45, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x55, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x10, 0x01,
	0x12, 0x07, 0x0a, 0x03, 0x49, 0x41, 0x4d, 0x10, 0x02, 0x32, 0x74, 0x0a, 0x08, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x68, 0x0a, 0x0d, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x47,
	0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76,
	0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32,
	0xc2, 0x04, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x65, 0x72, 0x12,
	0x83, 0x01, 0x0a, 0x16, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x2e, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31,
	0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33,
	0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x83, 0x01, 0x0a, 0x16, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x32, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x90, 0x01, 0x0a, 0x1b,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x37, 0x2e, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61,
	0x31, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x93,
	0x01, 0x0a, 0x1c, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x44,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x38, 0x2e, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x76, 0x6f,
	0x6b, 0x65, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x39, 0x2e, 0x64, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x3a, 0x3c, 0x0a, 0x0a, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x65, 0x6e,
	0x75, 0x6d, 0x12, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xdc, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x45, 0x6e,
	0x75, 0x6d, 0x3a, 0x4c, 0x0a, 0x10, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x65, 0x6e, 0x75, 0x6d,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xdc, 0x08, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x4b, 0x0a, 0x11, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1d, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0xdb, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x3a, 0x3f, 0x0a,
	0x0b, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1d, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xdc, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x3a, 0x45,
	0x0a, 0x0d, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x1f, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0xdc, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x3a, 0x42, 0x0a, 0x0c, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1e, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xdc, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x3a, 0x45, 0x0a, 0x0d, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xdc, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0c, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x42, 0x2f, 0x5a, 0x2d, 0x70, 0x6c, 0x75, 0x72, 0x61, 0x6c, 0x73, 0x68, 0x2f, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63,
	0x65, 0x2d, 0x73, 0x70, 0x65, 0x63, 0x3b, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spec_deployment_proto_rawDescOnce sync.Once
	file_spec_deployment_proto_rawDescData = file_spec_deployment_proto_rawDesc
)

func file_spec_deployment_proto_rawDescGZIP() []byte {
	file_spec_deployment_proto_rawDescOnce.Do(func() {
		file_spec_deployment_proto_rawDescData = protoimpl.X.CompressGZIP(file_spec_deployment_proto_rawDescData)
	})
	return file_spec_deployment_proto_rawDescData
}

var file_spec_deployment_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_spec_deployment_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_spec_deployment_proto_goTypes = []interface{}{
	(S3SignatureVersion)(0),                      // 0: deployment.v1alpha1.S3SignatureVersion
	(AnonymousDeploymentAccessMode)(0),           // 1: deployment.v1alpha1.AnonymousDeploymentAccessMode
	(AuthenticationType)(0),                      // 2: deployment.v1alpha1.AuthenticationType
	(*S3)(nil),                                   // 3: deployment.v1alpha1.S3
	(*AzureBlob)(nil),                            // 4: deployment.v1alpha1.AzureBlob
	(*GCS)(nil),                                  // 5: deployment.v1alpha1.GCS
	(*Protocol)(nil),                             // 6: deployment.v1alpha1.Protocol
	(*CredentialDetails)(nil),                    // 7: deployment.v1alpha1.CredentialDetails
	(*DriverGetInfoRequest)(nil),                 // 8: deployment.v1alpha1.DriverGetInfoRequest
	(*DriverGetInfoResponse)(nil),                // 9: deployment.v1alpha1.DriverGetInfoResponse
	(*DriverCreateDeploymentRequest)(nil),        // 10: deployment.v1alpha1.DriverCreateDeploymentRequest
	(*DriverCreateDeploymentResponse)(nil),       // 11: deployment.v1alpha1.DriverCreateDeploymentResponse
	(*DriverDeleteDeploymentRequest)(nil),        // 12: deployment.v1alpha1.DriverDeleteDeploymentRequest
	(*DriverDeleteDeploymentResponse)(nil),       // 13: deployment.v1alpha1.DriverDeleteDeploymentResponse
	(*DriverGrantDeploymentAccessRequest)(nil),   // 14: deployment.v1alpha1.DriverGrantDeploymentAccessRequest
	(*DriverGrantDeploymentAccessResponse)(nil),  // 15: deployment.v1alpha1.DriverGrantDeploymentAccessResponse
	(*DriverRevokeDeploymentAccessRequest)(nil),  // 16: deployment.v1alpha1.DriverRevokeDeploymentAccessRequest
	(*DriverRevokeDeploymentAccessResponse)(nil), // 17: deployment.v1alpha1.DriverRevokeDeploymentAccessResponse
	nil,                                   // 18: deployment.v1alpha1.CredentialDetails.SecretsEntry
	nil,                                   // 19: deployment.v1alpha1.DriverCreateDeploymentRequest.ParametersEntry
	nil,                                   // 20: deployment.v1alpha1.DriverGrantDeploymentAccessRequest.ParametersEntry
	nil,                                   // 21: deployment.v1alpha1.DriverGrantDeploymentAccessResponse.CredentialsEntry
	(*descriptorpb.EnumOptions)(nil),      // 22: google.protobuf.EnumOptions
	(*descriptorpb.EnumValueOptions)(nil), // 23: google.protobuf.EnumValueOptions
	(*descriptorpb.FieldOptions)(nil),     // 24: google.protobuf.FieldOptions
	(*descriptorpb.MessageOptions)(nil),   // 25: google.protobuf.MessageOptions
	(*descriptorpb.MethodOptions)(nil),    // 26: google.protobuf.MethodOptions
	(*descriptorpb.ServiceOptions)(nil),   // 27: google.protobuf.ServiceOptions
}
var file_spec_deployment_proto_depIdxs = []int32{
	0,  // 0: deployment.v1alpha1.S3.signature_version:type_name -> deployment.v1alpha1.S3SignatureVersion
	3,  // 1: deployment.v1alpha1.Protocol.s3:type_name -> deployment.v1alpha1.S3
	4,  // 2: deployment.v1alpha1.Protocol.azureBlob:type_name -> deployment.v1alpha1.AzureBlob
	5,  // 3: deployment.v1alpha1.Protocol.gcs:type_name -> deployment.v1alpha1.GCS
	18, // 4: deployment.v1alpha1.CredentialDetails.secrets:type_name -> deployment.v1alpha1.CredentialDetails.SecretsEntry
	19, // 5: deployment.v1alpha1.DriverCreateDeploymentRequest.parameters:type_name -> deployment.v1alpha1.DriverCreateDeploymentRequest.ParametersEntry
	6,  // 6: deployment.v1alpha1.DriverCreateDeploymentResponse.deployment_info:type_name -> deployment.v1alpha1.Protocol
	2,  // 7: deployment.v1alpha1.DriverGrantDeploymentAccessRequest.authentication_type:type_name -> deployment.v1alpha1.AuthenticationType
	20, // 8: deployment.v1alpha1.DriverGrantDeploymentAccessRequest.parameters:type_name -> deployment.v1alpha1.DriverGrantDeploymentAccessRequest.ParametersEntry
	21, // 9: deployment.v1alpha1.DriverGrantDeploymentAccessResponse.credentials:type_name -> deployment.v1alpha1.DriverGrantDeploymentAccessResponse.CredentialsEntry
	7,  // 10: deployment.v1alpha1.DriverGrantDeploymentAccessResponse.CredentialsEntry.value:type_name -> deployment.v1alpha1.CredentialDetails
	22, // 11: deployment.v1alpha1.alpha_enum:extendee -> google.protobuf.EnumOptions
	23, // 12: deployment.v1alpha1.alpha_enum_value:extendee -> google.protobuf.EnumValueOptions
	24, // 13: deployment.v1alpha1.deployment_secret:extendee -> google.protobuf.FieldOptions
	24, // 14: deployment.v1alpha1.alpha_field:extendee -> google.protobuf.FieldOptions
	25, // 15: deployment.v1alpha1.alpha_message:extendee -> google.protobuf.MessageOptions
	26, // 16: deployment.v1alpha1.alpha_method:extendee -> google.protobuf.MethodOptions
	27, // 17: deployment.v1alpha1.alpha_service:extendee -> google.protobuf.ServiceOptions
	8,  // 18: deployment.v1alpha1.Identity.DriverGetInfo:input_type -> deployment.v1alpha1.DriverGetInfoRequest
	10, // 19: deployment.v1alpha1.Provisioner.DriverCreateDeployment:input_type -> deployment.v1alpha1.DriverCreateDeploymentRequest
	12, // 20: deployment.v1alpha1.Provisioner.DriverDeleteDeployment:input_type -> deployment.v1alpha1.DriverDeleteDeploymentRequest
	14, // 21: deployment.v1alpha1.Provisioner.DriverGrantDeploymentAccess:input_type -> deployment.v1alpha1.DriverGrantDeploymentAccessRequest
	16, // 22: deployment.v1alpha1.Provisioner.DriverRevokeDeploymentAccess:input_type -> deployment.v1alpha1.DriverRevokeDeploymentAccessRequest
	9,  // 23: deployment.v1alpha1.Identity.DriverGetInfo:output_type -> deployment.v1alpha1.DriverGetInfoResponse
	11, // 24: deployment.v1alpha1.Provisioner.DriverCreateDeployment:output_type -> deployment.v1alpha1.DriverCreateDeploymentResponse
	13, // 25: deployment.v1alpha1.Provisioner.DriverDeleteDeployment:output_type -> deployment.v1alpha1.DriverDeleteDeploymentResponse
	15, // 26: deployment.v1alpha1.Provisioner.DriverGrantDeploymentAccess:output_type -> deployment.v1alpha1.DriverGrantDeploymentAccessResponse
	17, // 27: deployment.v1alpha1.Provisioner.DriverRevokeDeploymentAccess:output_type -> deployment.v1alpha1.DriverRevokeDeploymentAccessResponse
	23, // [23:28] is the sub-list for method output_type
	18, // [18:23] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	11, // [11:18] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_spec_deployment_proto_init() }
func file_spec_deployment_proto_init() {
	if File_spec_deployment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spec_deployment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*S3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_deployment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AzureBlob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_deployment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GCS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_deployment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Protocol); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_deployment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CredentialDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_deployment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverGetInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_deployment_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverGetInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_deployment_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverCreateDeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_deployment_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverCreateDeploymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_deployment_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverDeleteDeploymentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_deployment_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverDeleteDeploymentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_deployment_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverGrantDeploymentAccessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_deployment_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverGrantDeploymentAccessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_deployment_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverRevokeDeploymentAccessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spec_deployment_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverRevokeDeploymentAccessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_spec_deployment_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Protocol_S3)(nil),
		(*Protocol_AzureBlob)(nil),
		(*Protocol_Gcs)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spec_deployment_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   19,
			NumExtensions: 7,
			NumServices:   2,
		},
		GoTypes:           file_spec_deployment_proto_goTypes,
		DependencyIndexes: file_spec_deployment_proto_depIdxs,
		EnumInfos:         file_spec_deployment_proto_enumTypes,
		MessageInfos:      file_spec_deployment_proto_msgTypes,
		ExtensionInfos:    file_spec_deployment_proto_extTypes,
	}.Build()
	File_spec_deployment_proto = out.File
	file_spec_deployment_proto_rawDesc = nil
	file_spec_deployment_proto_goTypes = nil
	file_spec_deployment_proto_depIdxs = nil
}
